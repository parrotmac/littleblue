// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"
)

type Node interface {
	IsNode()
}

type AggregateBuildJob struct {
	Count int `json:"count"`
}

type AggregateDockerRegistry struct {
	Count int `json:"count"`
}

type AggregateSourceRepository struct {
	Count int `json:"count"`
}

type AggregateUser struct {
	Count int `json:"count"`
}

type BatchPayload struct {
	Count string `json:"count"`
}

type BuildJob struct {
	ID                  string            `json:"id"`
	CreatedAt           string            `json:"createdAt"`
	UpdatedAt           string            `json:"updatedAt"`
	CompletedAt         *string           `json:"completedAt"`
	BuildHostKind       BuildHost         `json:"buildHostKind"`
	BuildHostIdentifier *string           `json:"buildHostIdentifier"`
	Repo                *SourceRepository `json:"repo"`
	Status              BuildJobStatus    `json:"status"`
	BuildIdentifier     string            `json:"buildIdentifier"`
	SourceRevision      string            `json:"sourceRevision"`
	ArtifactURI         string            `json:"artifactUri"`
	SetupLogs           *string           `json:"setupLogs"`
	BuildLogs           *string           `json:"buildLogs"`
	PushLogs            *string           `json:"pushLogs"`
}

type BuildJobConnection struct {
	PageInfo  *PageInfo          `json:"pageInfo"`
	Edges     []*BuildJobEdge    `json:"edges"`
	Aggregate *AggregateBuildJob `json:"aggregate"`
}

type BuildJobCreateInput struct {
	ID                  *string                         `json:"id"`
	CompletedAt         *string                         `json:"completedAt"`
	BuildHostKind       BuildHost                       `json:"buildHostKind"`
	BuildHostIdentifier *string                         `json:"buildHostIdentifier"`
	Repo                *SourceRepositoryCreateOneInput `json:"repo"`
	Status              BuildJobStatus                  `json:"status"`
	BuildIdentifier     string                          `json:"buildIdentifier"`
	SourceRevision      string                          `json:"sourceRevision"`
	ArtifactURI         string                          `json:"artifactUri"`
	SetupLogs           *string                         `json:"setupLogs"`
	BuildLogs           *string                         `json:"buildLogs"`
	PushLogs            *string                         `json:"pushLogs"`
}

type BuildJobEdge struct {
	Node   *BuildJob `json:"node"`
	Cursor string    `json:"cursor"`
}

type BuildJobPreviousValues struct {
	ID                  string         `json:"id"`
	CreatedAt           string         `json:"createdAt"`
	UpdatedAt           string         `json:"updatedAt"`
	CompletedAt         *string        `json:"completedAt"`
	BuildHostKind       BuildHost      `json:"buildHostKind"`
	BuildHostIdentifier *string        `json:"buildHostIdentifier"`
	Status              BuildJobStatus `json:"status"`
	BuildIdentifier     string         `json:"buildIdentifier"`
	SourceRevision      string         `json:"sourceRevision"`
	ArtifactURI         string         `json:"artifactUri"`
	SetupLogs           *string        `json:"setupLogs"`
	BuildLogs           *string        `json:"buildLogs"`
	PushLogs            *string        `json:"pushLogs"`
}

type BuildJobSubscriptionPayload struct {
	Mutation       MutationType            `json:"mutation"`
	Node           *BuildJob               `json:"node"`
	UpdatedFields  []string                `json:"updatedFields"`
	PreviousValues *BuildJobPreviousValues `json:"previousValues"`
}

type BuildJobSubscriptionWhereInput struct {
	MutationIn                 []MutationType                    `json:"mutation_in"`
	UpdatedFieldsContains      *string                           `json:"updatedFields_contains"`
	UpdatedFieldsContainsEvery []string                          `json:"updatedFields_contains_every"`
	UpdatedFieldsContainsSome  []string                          `json:"updatedFields_contains_some"`
	Node                       *BuildJobWhereInput               `json:"node"`
	And                        []*BuildJobSubscriptionWhereInput `json:"AND"`
	Or                         []*BuildJobSubscriptionWhereInput `json:"OR"`
	Not                        []*BuildJobSubscriptionWhereInput `json:"NOT"`
}

type BuildJobUpdateInput struct {
	CompletedAt         *string                                 `json:"completedAt"`
	BuildHostKind       *BuildHost                              `json:"buildHostKind"`
	BuildHostIdentifier *string                                 `json:"buildHostIdentifier"`
	Repo                *SourceRepositoryUpdateOneRequiredInput `json:"repo"`
	Status              *BuildJobStatus                         `json:"status"`
	BuildIdentifier     *string                                 `json:"buildIdentifier"`
	SourceRevision      *string                                 `json:"sourceRevision"`
	ArtifactURI         *string                                 `json:"artifactUri"`
	SetupLogs           *string                                 `json:"setupLogs"`
	BuildLogs           *string                                 `json:"buildLogs"`
	PushLogs            *string                                 `json:"pushLogs"`
}

type BuildJobUpdateManyMutationInput struct {
	CompletedAt         *string         `json:"completedAt"`
	BuildHostKind       *BuildHost      `json:"buildHostKind"`
	BuildHostIdentifier *string         `json:"buildHostIdentifier"`
	Status              *BuildJobStatus `json:"status"`
	BuildIdentifier     *string         `json:"buildIdentifier"`
	SourceRevision      *string         `json:"sourceRevision"`
	ArtifactURI         *string         `json:"artifactUri"`
	SetupLogs           *string         `json:"setupLogs"`
	BuildLogs           *string         `json:"buildLogs"`
	PushLogs            *string         `json:"pushLogs"`
}

type BuildJobWhereInput struct {
	ID                               *string                     `json:"id"`
	IDNot                            *string                     `json:"id_not"`
	IDIn                             []string                    `json:"id_in"`
	IDNotIn                          []string                    `json:"id_not_in"`
	IDLt                             *string                     `json:"id_lt"`
	IDLte                            *string                     `json:"id_lte"`
	IDGt                             *string                     `json:"id_gt"`
	IDGte                            *string                     `json:"id_gte"`
	IDContains                       *string                     `json:"id_contains"`
	IDNotContains                    *string                     `json:"id_not_contains"`
	IDStartsWith                     *string                     `json:"id_starts_with"`
	IDNotStartsWith                  *string                     `json:"id_not_starts_with"`
	IDEndsWith                       *string                     `json:"id_ends_with"`
	IDNotEndsWith                    *string                     `json:"id_not_ends_with"`
	CreatedAt                        *string                     `json:"createdAt"`
	CreatedAtNot                     *string                     `json:"createdAt_not"`
	CreatedAtIn                      []string                    `json:"createdAt_in"`
	CreatedAtNotIn                   []string                    `json:"createdAt_not_in"`
	CreatedAtLt                      *string                     `json:"createdAt_lt"`
	CreatedAtLte                     *string                     `json:"createdAt_lte"`
	CreatedAtGt                      *string                     `json:"createdAt_gt"`
	CreatedAtGte                     *string                     `json:"createdAt_gte"`
	UpdatedAt                        *string                     `json:"updatedAt"`
	UpdatedAtNot                     *string                     `json:"updatedAt_not"`
	UpdatedAtIn                      []string                    `json:"updatedAt_in"`
	UpdatedAtNotIn                   []string                    `json:"updatedAt_not_in"`
	UpdatedAtLt                      *string                     `json:"updatedAt_lt"`
	UpdatedAtLte                     *string                     `json:"updatedAt_lte"`
	UpdatedAtGt                      *string                     `json:"updatedAt_gt"`
	UpdatedAtGte                     *string                     `json:"updatedAt_gte"`
	CompletedAt                      *string                     `json:"completedAt"`
	CompletedAtNot                   *string                     `json:"completedAt_not"`
	CompletedAtIn                    []string                    `json:"completedAt_in"`
	CompletedAtNotIn                 []string                    `json:"completedAt_not_in"`
	CompletedAtLt                    *string                     `json:"completedAt_lt"`
	CompletedAtLte                   *string                     `json:"completedAt_lte"`
	CompletedAtGt                    *string                     `json:"completedAt_gt"`
	CompletedAtGte                   *string                     `json:"completedAt_gte"`
	BuildHostKind                    *BuildHost                  `json:"buildHostKind"`
	BuildHostKindNot                 *BuildHost                  `json:"buildHostKind_not"`
	BuildHostKindIn                  []BuildHost                 `json:"buildHostKind_in"`
	BuildHostKindNotIn               []BuildHost                 `json:"buildHostKind_not_in"`
	BuildHostIdentifier              *string                     `json:"buildHostIdentifier"`
	BuildHostIdentifierNot           *string                     `json:"buildHostIdentifier_not"`
	BuildHostIdentifierIn            []string                    `json:"buildHostIdentifier_in"`
	BuildHostIdentifierNotIn         []string                    `json:"buildHostIdentifier_not_in"`
	BuildHostIdentifierLt            *string                     `json:"buildHostIdentifier_lt"`
	BuildHostIdentifierLte           *string                     `json:"buildHostIdentifier_lte"`
	BuildHostIdentifierGt            *string                     `json:"buildHostIdentifier_gt"`
	BuildHostIdentifierGte           *string                     `json:"buildHostIdentifier_gte"`
	BuildHostIdentifierContains      *string                     `json:"buildHostIdentifier_contains"`
	BuildHostIdentifierNotContains   *string                     `json:"buildHostIdentifier_not_contains"`
	BuildHostIdentifierStartsWith    *string                     `json:"buildHostIdentifier_starts_with"`
	BuildHostIdentifierNotStartsWith *string                     `json:"buildHostIdentifier_not_starts_with"`
	BuildHostIdentifierEndsWith      *string                     `json:"buildHostIdentifier_ends_with"`
	BuildHostIdentifierNotEndsWith   *string                     `json:"buildHostIdentifier_not_ends_with"`
	Repo                             *SourceRepositoryWhereInput `json:"repo"`
	Status                           *BuildJobStatus             `json:"status"`
	StatusNot                        *BuildJobStatus             `json:"status_not"`
	StatusIn                         []BuildJobStatus            `json:"status_in"`
	StatusNotIn                      []BuildJobStatus            `json:"status_not_in"`
	BuildIdentifier                  *string                     `json:"buildIdentifier"`
	BuildIdentifierNot               *string                     `json:"buildIdentifier_not"`
	BuildIdentifierIn                []string                    `json:"buildIdentifier_in"`
	BuildIdentifierNotIn             []string                    `json:"buildIdentifier_not_in"`
	BuildIdentifierLt                *string                     `json:"buildIdentifier_lt"`
	BuildIdentifierLte               *string                     `json:"buildIdentifier_lte"`
	BuildIdentifierGt                *string                     `json:"buildIdentifier_gt"`
	BuildIdentifierGte               *string                     `json:"buildIdentifier_gte"`
	BuildIdentifierContains          *string                     `json:"buildIdentifier_contains"`
	BuildIdentifierNotContains       *string                     `json:"buildIdentifier_not_contains"`
	BuildIdentifierStartsWith        *string                     `json:"buildIdentifier_starts_with"`
	BuildIdentifierNotStartsWith     *string                     `json:"buildIdentifier_not_starts_with"`
	BuildIdentifierEndsWith          *string                     `json:"buildIdentifier_ends_with"`
	BuildIdentifierNotEndsWith       *string                     `json:"buildIdentifier_not_ends_with"`
	SourceRevision                   *string                     `json:"sourceRevision"`
	SourceRevisionNot                *string                     `json:"sourceRevision_not"`
	SourceRevisionIn                 []string                    `json:"sourceRevision_in"`
	SourceRevisionNotIn              []string                    `json:"sourceRevision_not_in"`
	SourceRevisionLt                 *string                     `json:"sourceRevision_lt"`
	SourceRevisionLte                *string                     `json:"sourceRevision_lte"`
	SourceRevisionGt                 *string                     `json:"sourceRevision_gt"`
	SourceRevisionGte                *string                     `json:"sourceRevision_gte"`
	SourceRevisionContains           *string                     `json:"sourceRevision_contains"`
	SourceRevisionNotContains        *string                     `json:"sourceRevision_not_contains"`
	SourceRevisionStartsWith         *string                     `json:"sourceRevision_starts_with"`
	SourceRevisionNotStartsWith      *string                     `json:"sourceRevision_not_starts_with"`
	SourceRevisionEndsWith           *string                     `json:"sourceRevision_ends_with"`
	SourceRevisionNotEndsWith        *string                     `json:"sourceRevision_not_ends_with"`
	ArtifactURI                      *string                     `json:"artifactUri"`
	ArtifactURINot                   *string                     `json:"artifactUri_not"`
	ArtifactURIIn                    []string                    `json:"artifactUri_in"`
	ArtifactURINotIn                 []string                    `json:"artifactUri_not_in"`
	ArtifactURILt                    *string                     `json:"artifactUri_lt"`
	ArtifactURILte                   *string                     `json:"artifactUri_lte"`
	ArtifactURIGt                    *string                     `json:"artifactUri_gt"`
	ArtifactURIGte                   *string                     `json:"artifactUri_gte"`
	ArtifactURIContains              *string                     `json:"artifactUri_contains"`
	ArtifactURINotContains           *string                     `json:"artifactUri_not_contains"`
	ArtifactURIStartsWith            *string                     `json:"artifactUri_starts_with"`
	ArtifactURINotStartsWith         *string                     `json:"artifactUri_not_starts_with"`
	ArtifactURIEndsWith              *string                     `json:"artifactUri_ends_with"`
	ArtifactURINotEndsWith           *string                     `json:"artifactUri_not_ends_with"`
	SetupLogs                        *string                     `json:"setupLogs"`
	SetupLogsNot                     *string                     `json:"setupLogs_not"`
	SetupLogsIn                      []string                    `json:"setupLogs_in"`
	SetupLogsNotIn                   []string                    `json:"setupLogs_not_in"`
	SetupLogsLt                      *string                     `json:"setupLogs_lt"`
	SetupLogsLte                     *string                     `json:"setupLogs_lte"`
	SetupLogsGt                      *string                     `json:"setupLogs_gt"`
	SetupLogsGte                     *string                     `json:"setupLogs_gte"`
	SetupLogsContains                *string                     `json:"setupLogs_contains"`
	SetupLogsNotContains             *string                     `json:"setupLogs_not_contains"`
	SetupLogsStartsWith              *string                     `json:"setupLogs_starts_with"`
	SetupLogsNotStartsWith           *string                     `json:"setupLogs_not_starts_with"`
	SetupLogsEndsWith                *string                     `json:"setupLogs_ends_with"`
	SetupLogsNotEndsWith             *string                     `json:"setupLogs_not_ends_with"`
	BuildLogs                        *string                     `json:"buildLogs"`
	BuildLogsNot                     *string                     `json:"buildLogs_not"`
	BuildLogsIn                      []string                    `json:"buildLogs_in"`
	BuildLogsNotIn                   []string                    `json:"buildLogs_not_in"`
	BuildLogsLt                      *string                     `json:"buildLogs_lt"`
	BuildLogsLte                     *string                     `json:"buildLogs_lte"`
	BuildLogsGt                      *string                     `json:"buildLogs_gt"`
	BuildLogsGte                     *string                     `json:"buildLogs_gte"`
	BuildLogsContains                *string                     `json:"buildLogs_contains"`
	BuildLogsNotContains             *string                     `json:"buildLogs_not_contains"`
	BuildLogsStartsWith              *string                     `json:"buildLogs_starts_with"`
	BuildLogsNotStartsWith           *string                     `json:"buildLogs_not_starts_with"`
	BuildLogsEndsWith                *string                     `json:"buildLogs_ends_with"`
	BuildLogsNotEndsWith             *string                     `json:"buildLogs_not_ends_with"`
	PushLogs                         *string                     `json:"pushLogs"`
	PushLogsNot                      *string                     `json:"pushLogs_not"`
	PushLogsIn                       []string                    `json:"pushLogs_in"`
	PushLogsNotIn                    []string                    `json:"pushLogs_not_in"`
	PushLogsLt                       *string                     `json:"pushLogs_lt"`
	PushLogsLte                      *string                     `json:"pushLogs_lte"`
	PushLogsGt                       *string                     `json:"pushLogs_gt"`
	PushLogsGte                      *string                     `json:"pushLogs_gte"`
	PushLogsContains                 *string                     `json:"pushLogs_contains"`
	PushLogsNotContains              *string                     `json:"pushLogs_not_contains"`
	PushLogsStartsWith               *string                     `json:"pushLogs_starts_with"`
	PushLogsNotStartsWith            *string                     `json:"pushLogs_not_starts_with"`
	PushLogsEndsWith                 *string                     `json:"pushLogs_ends_with"`
	PushLogsNotEndsWith              *string                     `json:"pushLogs_not_ends_with"`
	And                              []*BuildJobWhereInput       `json:"AND"`
	Or                               []*BuildJobWhereInput       `json:"OR"`
	Not                              []*BuildJobWhereInput       `json:"NOT"`
}

type BuildJobWhereUniqueInput struct {
	ID *string `json:"id"`
}

type DockerRegistry struct {
	ID           string `json:"id"`
	CreatedAt    string `json:"createdAt"`
	UpdatedAt    string `json:"updatedAt"`
	Hostname     string `json:"Hostname"`
	AuthUsername string `json:"AuthUsername"`
	AuthPassword string `json:"AuthPassword"`
}

type DockerRegistryConnection struct {
	PageInfo  *PageInfo                `json:"pageInfo"`
	Edges     []*DockerRegistryEdge    `json:"edges"`
	Aggregate *AggregateDockerRegistry `json:"aggregate"`
}

type DockerRegistryCreateInput struct {
	ID           *string `json:"id"`
	Hostname     string  `json:"Hostname"`
	AuthUsername string  `json:"AuthUsername"`
	AuthPassword string  `json:"AuthPassword"`
}

type DockerRegistryEdge struct {
	Node   *DockerRegistry `json:"node"`
	Cursor string          `json:"cursor"`
}

type DockerRegistryPreviousValues struct {
	ID           string `json:"id"`
	CreatedAt    string `json:"createdAt"`
	UpdatedAt    string `json:"updatedAt"`
	Hostname     string `json:"Hostname"`
	AuthUsername string `json:"AuthUsername"`
	AuthPassword string `json:"AuthPassword"`
}

type DockerRegistrySubscriptionPayload struct {
	Mutation       MutationType                  `json:"mutation"`
	Node           *DockerRegistry               `json:"node"`
	UpdatedFields  []string                      `json:"updatedFields"`
	PreviousValues *DockerRegistryPreviousValues `json:"previousValues"`
}

type DockerRegistrySubscriptionWhereInput struct {
	MutationIn                 []MutationType                          `json:"mutation_in"`
	UpdatedFieldsContains      *string                                 `json:"updatedFields_contains"`
	UpdatedFieldsContainsEvery []string                                `json:"updatedFields_contains_every"`
	UpdatedFieldsContainsSome  []string                                `json:"updatedFields_contains_some"`
	Node                       *DockerRegistryWhereInput               `json:"node"`
	And                        []*DockerRegistrySubscriptionWhereInput `json:"AND"`
	Or                         []*DockerRegistrySubscriptionWhereInput `json:"OR"`
	Not                        []*DockerRegistrySubscriptionWhereInput `json:"NOT"`
}

type DockerRegistryUpdateInput struct {
	Hostname     *string `json:"Hostname"`
	AuthUsername *string `json:"AuthUsername"`
	AuthPassword *string `json:"AuthPassword"`
}

type DockerRegistryUpdateManyMutationInput struct {
	Hostname     *string `json:"Hostname"`
	AuthUsername *string `json:"AuthUsername"`
	AuthPassword *string `json:"AuthPassword"`
}

type DockerRegistryWhereInput struct {
	ID                        *string                     `json:"id"`
	IDNot                     *string                     `json:"id_not"`
	IDIn                      []string                    `json:"id_in"`
	IDNotIn                   []string                    `json:"id_not_in"`
	IDLt                      *string                     `json:"id_lt"`
	IDLte                     *string                     `json:"id_lte"`
	IDGt                      *string                     `json:"id_gt"`
	IDGte                     *string                     `json:"id_gte"`
	IDContains                *string                     `json:"id_contains"`
	IDNotContains             *string                     `json:"id_not_contains"`
	IDStartsWith              *string                     `json:"id_starts_with"`
	IDNotStartsWith           *string                     `json:"id_not_starts_with"`
	IDEndsWith                *string                     `json:"id_ends_with"`
	IDNotEndsWith             *string                     `json:"id_not_ends_with"`
	CreatedAt                 *string                     `json:"createdAt"`
	CreatedAtNot              *string                     `json:"createdAt_not"`
	CreatedAtIn               []string                    `json:"createdAt_in"`
	CreatedAtNotIn            []string                    `json:"createdAt_not_in"`
	CreatedAtLt               *string                     `json:"createdAt_lt"`
	CreatedAtLte              *string                     `json:"createdAt_lte"`
	CreatedAtGt               *string                     `json:"createdAt_gt"`
	CreatedAtGte              *string                     `json:"createdAt_gte"`
	UpdatedAt                 *string                     `json:"updatedAt"`
	UpdatedAtNot              *string                     `json:"updatedAt_not"`
	UpdatedAtIn               []string                    `json:"updatedAt_in"`
	UpdatedAtNotIn            []string                    `json:"updatedAt_not_in"`
	UpdatedAtLt               *string                     `json:"updatedAt_lt"`
	UpdatedAtLte              *string                     `json:"updatedAt_lte"`
	UpdatedAtGt               *string                     `json:"updatedAt_gt"`
	UpdatedAtGte              *string                     `json:"updatedAt_gte"`
	Hostname                  *string                     `json:"Hostname"`
	HostnameNot               *string                     `json:"Hostname_not"`
	HostnameIn                []string                    `json:"Hostname_in"`
	HostnameNotIn             []string                    `json:"Hostname_not_in"`
	HostnameLt                *string                     `json:"Hostname_lt"`
	HostnameLte               *string                     `json:"Hostname_lte"`
	HostnameGt                *string                     `json:"Hostname_gt"`
	HostnameGte               *string                     `json:"Hostname_gte"`
	HostnameContains          *string                     `json:"Hostname_contains"`
	HostnameNotContains       *string                     `json:"Hostname_not_contains"`
	HostnameStartsWith        *string                     `json:"Hostname_starts_with"`
	HostnameNotStartsWith     *string                     `json:"Hostname_not_starts_with"`
	HostnameEndsWith          *string                     `json:"Hostname_ends_with"`
	HostnameNotEndsWith       *string                     `json:"Hostname_not_ends_with"`
	AuthUsername              *string                     `json:"AuthUsername"`
	AuthUsernameNot           *string                     `json:"AuthUsername_not"`
	AuthUsernameIn            []string                    `json:"AuthUsername_in"`
	AuthUsernameNotIn         []string                    `json:"AuthUsername_not_in"`
	AuthUsernameLt            *string                     `json:"AuthUsername_lt"`
	AuthUsernameLte           *string                     `json:"AuthUsername_lte"`
	AuthUsernameGt            *string                     `json:"AuthUsername_gt"`
	AuthUsernameGte           *string                     `json:"AuthUsername_gte"`
	AuthUsernameContains      *string                     `json:"AuthUsername_contains"`
	AuthUsernameNotContains   *string                     `json:"AuthUsername_not_contains"`
	AuthUsernameStartsWith    *string                     `json:"AuthUsername_starts_with"`
	AuthUsernameNotStartsWith *string                     `json:"AuthUsername_not_starts_with"`
	AuthUsernameEndsWith      *string                     `json:"AuthUsername_ends_with"`
	AuthUsernameNotEndsWith   *string                     `json:"AuthUsername_not_ends_with"`
	AuthPassword              *string                     `json:"AuthPassword"`
	AuthPasswordNot           *string                     `json:"AuthPassword_not"`
	AuthPasswordIn            []string                    `json:"AuthPassword_in"`
	AuthPasswordNotIn         []string                    `json:"AuthPassword_not_in"`
	AuthPasswordLt            *string                     `json:"AuthPassword_lt"`
	AuthPasswordLte           *string                     `json:"AuthPassword_lte"`
	AuthPasswordGt            *string                     `json:"AuthPassword_gt"`
	AuthPasswordGte           *string                     `json:"AuthPassword_gte"`
	AuthPasswordContains      *string                     `json:"AuthPassword_contains"`
	AuthPasswordNotContains   *string                     `json:"AuthPassword_not_contains"`
	AuthPasswordStartsWith    *string                     `json:"AuthPassword_starts_with"`
	AuthPasswordNotStartsWith *string                     `json:"AuthPassword_not_starts_with"`
	AuthPasswordEndsWith      *string                     `json:"AuthPassword_ends_with"`
	AuthPasswordNotEndsWith   *string                     `json:"AuthPassword_not_ends_with"`
	And                       []*DockerRegistryWhereInput `json:"AND"`
	Or                        []*DockerRegistryWhereInput `json:"OR"`
	Not                       []*DockerRegistryWhereInput `json:"NOT"`
}

type DockerRegistryWhereUniqueInput struct {
	ID *string `json:"id"`
}

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor"`
	EndCursor       *string `json:"endCursor"`
}

type SourceRepository struct {
	ID                        string          `json:"id"`
	CreatedAt                 string          `json:"createdAt"`
	UpdatedAt                 string          `json:"updatedAt"`
	Owner                     *User           `json:"owner"`
	SourceProvider            *SourceProvider `json:"sourceProvider"`
	Name                      string          `json:"name"`
	AuthClientID              *string         `json:"authClientID"`
	AuthSecret                *string         `json:"authSecret"`
	CloneStrategy             CloneStrategy   `json:"cloneStrategy"`
	BuildsEnabled             bool            `json:"buildsEnabled"`
	BaseConfigurationFileName string          `json:"baseConfigurationFileName"`
}

type SourceRepositoryConnection struct {
	PageInfo  *PageInfo                  `json:"pageInfo"`
	Edges     []*SourceRepositoryEdge    `json:"edges"`
	Aggregate *AggregateSourceRepository `json:"aggregate"`
}

type SourceRepositoryCreateInput struct {
	ID                        *string             `json:"id"`
	Owner                     *UserCreateOneInput `json:"owner"`
	SourceProvider            *SourceProvider     `json:"sourceProvider"`
	Name                      string              `json:"name"`
	AuthClientID              *string             `json:"authClientID"`
	AuthSecret                *string             `json:"authSecret"`
	CloneStrategy             CloneStrategy       `json:"cloneStrategy"`
	BuildsEnabled             *bool               `json:"buildsEnabled"`
	BaseConfigurationFileName *string             `json:"baseConfigurationFileName"`
}

type SourceRepositoryCreateOneInput struct {
	Create  *SourceRepositoryCreateInput      `json:"create"`
	Connect *SourceRepositoryWhereUniqueInput `json:"connect"`
}

type SourceRepositoryEdge struct {
	Node   *SourceRepository `json:"node"`
	Cursor string            `json:"cursor"`
}

type SourceRepositoryPreviousValues struct {
	ID                        string          `json:"id"`
	CreatedAt                 string          `json:"createdAt"`
	UpdatedAt                 string          `json:"updatedAt"`
	SourceProvider            *SourceProvider `json:"sourceProvider"`
	Name                      string          `json:"name"`
	AuthClientID              *string         `json:"authClientID"`
	AuthSecret                *string         `json:"authSecret"`
	CloneStrategy             CloneStrategy   `json:"cloneStrategy"`
	BuildsEnabled             bool            `json:"buildsEnabled"`
	BaseConfigurationFileName string          `json:"baseConfigurationFileName"`
}

type SourceRepositorySubscriptionPayload struct {
	Mutation       MutationType                    `json:"mutation"`
	Node           *SourceRepository               `json:"node"`
	UpdatedFields  []string                        `json:"updatedFields"`
	PreviousValues *SourceRepositoryPreviousValues `json:"previousValues"`
}

type SourceRepositorySubscriptionWhereInput struct {
	MutationIn                 []MutationType                            `json:"mutation_in"`
	UpdatedFieldsContains      *string                                   `json:"updatedFields_contains"`
	UpdatedFieldsContainsEvery []string                                  `json:"updatedFields_contains_every"`
	UpdatedFieldsContainsSome  []string                                  `json:"updatedFields_contains_some"`
	Node                       *SourceRepositoryWhereInput               `json:"node"`
	And                        []*SourceRepositorySubscriptionWhereInput `json:"AND"`
	Or                         []*SourceRepositorySubscriptionWhereInput `json:"OR"`
	Not                        []*SourceRepositorySubscriptionWhereInput `json:"NOT"`
}

type SourceRepositoryUpdateDataInput struct {
	Owner                     *UserUpdateOneRequiredInput `json:"owner"`
	SourceProvider            *SourceProvider             `json:"sourceProvider"`
	Name                      *string                     `json:"name"`
	AuthClientID              *string                     `json:"authClientID"`
	AuthSecret                *string                     `json:"authSecret"`
	CloneStrategy             *CloneStrategy              `json:"cloneStrategy"`
	BuildsEnabled             *bool                       `json:"buildsEnabled"`
	BaseConfigurationFileName *string                     `json:"baseConfigurationFileName"`
}

type SourceRepositoryUpdateInput struct {
	Owner                     *UserUpdateOneRequiredInput `json:"owner"`
	SourceProvider            *SourceProvider             `json:"sourceProvider"`
	Name                      *string                     `json:"name"`
	AuthClientID              *string                     `json:"authClientID"`
	AuthSecret                *string                     `json:"authSecret"`
	CloneStrategy             *CloneStrategy              `json:"cloneStrategy"`
	BuildsEnabled             *bool                       `json:"buildsEnabled"`
	BaseConfigurationFileName *string                     `json:"baseConfigurationFileName"`
}

type SourceRepositoryUpdateManyMutationInput struct {
	SourceProvider            *SourceProvider `json:"sourceProvider"`
	Name                      *string         `json:"name"`
	AuthClientID              *string         `json:"authClientID"`
	AuthSecret                *string         `json:"authSecret"`
	CloneStrategy             *CloneStrategy  `json:"cloneStrategy"`
	BuildsEnabled             *bool           `json:"buildsEnabled"`
	BaseConfigurationFileName *string         `json:"baseConfigurationFileName"`
}

type SourceRepositoryUpdateOneRequiredInput struct {
	Create  *SourceRepositoryCreateInput       `json:"create"`
	Update  *SourceRepositoryUpdateDataInput   `json:"update"`
	Upsert  *SourceRepositoryUpsertNestedInput `json:"upsert"`
	Connect *SourceRepositoryWhereUniqueInput  `json:"connect"`
}

type SourceRepositoryUpsertNestedInput struct {
	Update *SourceRepositoryUpdateDataInput `json:"update"`
	Create *SourceRepositoryCreateInput     `json:"create"`
}

type SourceRepositoryWhereInput struct {
	ID                                     *string                       `json:"id"`
	IDNot                                  *string                       `json:"id_not"`
	IDIn                                   []string                      `json:"id_in"`
	IDNotIn                                []string                      `json:"id_not_in"`
	IDLt                                   *string                       `json:"id_lt"`
	IDLte                                  *string                       `json:"id_lte"`
	IDGt                                   *string                       `json:"id_gt"`
	IDGte                                  *string                       `json:"id_gte"`
	IDContains                             *string                       `json:"id_contains"`
	IDNotContains                          *string                       `json:"id_not_contains"`
	IDStartsWith                           *string                       `json:"id_starts_with"`
	IDNotStartsWith                        *string                       `json:"id_not_starts_with"`
	IDEndsWith                             *string                       `json:"id_ends_with"`
	IDNotEndsWith                          *string                       `json:"id_not_ends_with"`
	CreatedAt                              *string                       `json:"createdAt"`
	CreatedAtNot                           *string                       `json:"createdAt_not"`
	CreatedAtIn                            []string                      `json:"createdAt_in"`
	CreatedAtNotIn                         []string                      `json:"createdAt_not_in"`
	CreatedAtLt                            *string                       `json:"createdAt_lt"`
	CreatedAtLte                           *string                       `json:"createdAt_lte"`
	CreatedAtGt                            *string                       `json:"createdAt_gt"`
	CreatedAtGte                           *string                       `json:"createdAt_gte"`
	UpdatedAt                              *string                       `json:"updatedAt"`
	UpdatedAtNot                           *string                       `json:"updatedAt_not"`
	UpdatedAtIn                            []string                      `json:"updatedAt_in"`
	UpdatedAtNotIn                         []string                      `json:"updatedAt_not_in"`
	UpdatedAtLt                            *string                       `json:"updatedAt_lt"`
	UpdatedAtLte                           *string                       `json:"updatedAt_lte"`
	UpdatedAtGt                            *string                       `json:"updatedAt_gt"`
	UpdatedAtGte                           *string                       `json:"updatedAt_gte"`
	Owner                                  *UserWhereInput               `json:"owner"`
	SourceProvider                         *SourceProvider               `json:"sourceProvider"`
	SourceProviderNot                      *SourceProvider               `json:"sourceProvider_not"`
	SourceProviderIn                       []SourceProvider              `json:"sourceProvider_in"`
	SourceProviderNotIn                    []SourceProvider              `json:"sourceProvider_not_in"`
	Name                                   *string                       `json:"name"`
	NameNot                                *string                       `json:"name_not"`
	NameIn                                 []string                      `json:"name_in"`
	NameNotIn                              []string                      `json:"name_not_in"`
	NameLt                                 *string                       `json:"name_lt"`
	NameLte                                *string                       `json:"name_lte"`
	NameGt                                 *string                       `json:"name_gt"`
	NameGte                                *string                       `json:"name_gte"`
	NameContains                           *string                       `json:"name_contains"`
	NameNotContains                        *string                       `json:"name_not_contains"`
	NameStartsWith                         *string                       `json:"name_starts_with"`
	NameNotStartsWith                      *string                       `json:"name_not_starts_with"`
	NameEndsWith                           *string                       `json:"name_ends_with"`
	NameNotEndsWith                        *string                       `json:"name_not_ends_with"`
	AuthClientID                           *string                       `json:"authClientID"`
	AuthClientIDNot                        *string                       `json:"authClientID_not"`
	AuthClientIDIn                         []string                      `json:"authClientID_in"`
	AuthClientIDNotIn                      []string                      `json:"authClientID_not_in"`
	AuthClientIDLt                         *string                       `json:"authClientID_lt"`
	AuthClientIDLte                        *string                       `json:"authClientID_lte"`
	AuthClientIDGt                         *string                       `json:"authClientID_gt"`
	AuthClientIDGte                        *string                       `json:"authClientID_gte"`
	AuthClientIDContains                   *string                       `json:"authClientID_contains"`
	AuthClientIDNotContains                *string                       `json:"authClientID_not_contains"`
	AuthClientIDStartsWith                 *string                       `json:"authClientID_starts_with"`
	AuthClientIDNotStartsWith              *string                       `json:"authClientID_not_starts_with"`
	AuthClientIDEndsWith                   *string                       `json:"authClientID_ends_with"`
	AuthClientIDNotEndsWith                *string                       `json:"authClientID_not_ends_with"`
	AuthSecret                             *string                       `json:"authSecret"`
	AuthSecretNot                          *string                       `json:"authSecret_not"`
	AuthSecretIn                           []string                      `json:"authSecret_in"`
	AuthSecretNotIn                        []string                      `json:"authSecret_not_in"`
	AuthSecretLt                           *string                       `json:"authSecret_lt"`
	AuthSecretLte                          *string                       `json:"authSecret_lte"`
	AuthSecretGt                           *string                       `json:"authSecret_gt"`
	AuthSecretGte                          *string                       `json:"authSecret_gte"`
	AuthSecretContains                     *string                       `json:"authSecret_contains"`
	AuthSecretNotContains                  *string                       `json:"authSecret_not_contains"`
	AuthSecretStartsWith                   *string                       `json:"authSecret_starts_with"`
	AuthSecretNotStartsWith                *string                       `json:"authSecret_not_starts_with"`
	AuthSecretEndsWith                     *string                       `json:"authSecret_ends_with"`
	AuthSecretNotEndsWith                  *string                       `json:"authSecret_not_ends_with"`
	CloneStrategy                          *CloneStrategy                `json:"cloneStrategy"`
	CloneStrategyNot                       *CloneStrategy                `json:"cloneStrategy_not"`
	CloneStrategyIn                        []CloneStrategy               `json:"cloneStrategy_in"`
	CloneStrategyNotIn                     []CloneStrategy               `json:"cloneStrategy_not_in"`
	BuildsEnabled                          *bool                         `json:"buildsEnabled"`
	BuildsEnabledNot                       *bool                         `json:"buildsEnabled_not"`
	BaseConfigurationFileName              *string                       `json:"baseConfigurationFileName"`
	BaseConfigurationFileNameNot           *string                       `json:"baseConfigurationFileName_not"`
	BaseConfigurationFileNameIn            []string                      `json:"baseConfigurationFileName_in"`
	BaseConfigurationFileNameNotIn         []string                      `json:"baseConfigurationFileName_not_in"`
	BaseConfigurationFileNameLt            *string                       `json:"baseConfigurationFileName_lt"`
	BaseConfigurationFileNameLte           *string                       `json:"baseConfigurationFileName_lte"`
	BaseConfigurationFileNameGt            *string                       `json:"baseConfigurationFileName_gt"`
	BaseConfigurationFileNameGte           *string                       `json:"baseConfigurationFileName_gte"`
	BaseConfigurationFileNameContains      *string                       `json:"baseConfigurationFileName_contains"`
	BaseConfigurationFileNameNotContains   *string                       `json:"baseConfigurationFileName_not_contains"`
	BaseConfigurationFileNameStartsWith    *string                       `json:"baseConfigurationFileName_starts_with"`
	BaseConfigurationFileNameNotStartsWith *string                       `json:"baseConfigurationFileName_not_starts_with"`
	BaseConfigurationFileNameEndsWith      *string                       `json:"baseConfigurationFileName_ends_with"`
	BaseConfigurationFileNameNotEndsWith   *string                       `json:"baseConfigurationFileName_not_ends_with"`
	And                                    []*SourceRepositoryWhereInput `json:"AND"`
	Or                                     []*SourceRepositoryWhereInput `json:"OR"`
	Not                                    []*SourceRepositoryWhereInput `json:"NOT"`
}

type SourceRepositoryWhereUniqueInput struct {
	ID *string `json:"id"`
}

type User struct {
	ID                     string  `json:"id"`
	CreatedAt              string  `json:"createdAt"`
	UpdatedAt              string  `json:"updatedAt"`
	Name                   string  `json:"name"`
	Email                  string  `json:"email"`
	PasswordHash           *string `json:"passwordHash"`
	GithubUsername         *string `json:"githubUsername"`
	GithubAccountAuthToken *string `json:"githubAccountAuthToken"`
	GoogleAccountAuthToken *string `json:"googleAccountAuthToken"`
}

type UserConnection struct {
	PageInfo  *PageInfo      `json:"pageInfo"`
	Edges     []*UserEdge    `json:"edges"`
	Aggregate *AggregateUser `json:"aggregate"`
}

type UserCreateInput struct {
	ID                     *string `json:"id"`
	Name                   string  `json:"name"`
	Email                  string  `json:"email"`
	PasswordHash           *string `json:"passwordHash"`
	GithubUsername         *string `json:"githubUsername"`
	GithubAccountAuthToken *string `json:"githubAccountAuthToken"`
	GoogleAccountAuthToken *string `json:"googleAccountAuthToken"`
}

type UserCreateOneInput struct {
	Create  *UserCreateInput      `json:"create"`
	Connect *UserWhereUniqueInput `json:"connect"`
}

type UserEdge struct {
	Node   *User  `json:"node"`
	Cursor string `json:"cursor"`
}

type UserPreviousValues struct {
	ID                     string  `json:"id"`
	CreatedAt              string  `json:"createdAt"`
	UpdatedAt              string  `json:"updatedAt"`
	Name                   string  `json:"name"`
	Email                  string  `json:"email"`
	PasswordHash           *string `json:"passwordHash"`
	GithubUsername         *string `json:"githubUsername"`
	GithubAccountAuthToken *string `json:"githubAccountAuthToken"`
	GoogleAccountAuthToken *string `json:"googleAccountAuthToken"`
}

type UserSubscriptionPayload struct {
	Mutation       MutationType        `json:"mutation"`
	Node           *User               `json:"node"`
	UpdatedFields  []string            `json:"updatedFields"`
	PreviousValues *UserPreviousValues `json:"previousValues"`
}

type UserSubscriptionWhereInput struct {
	MutationIn                 []MutationType                `json:"mutation_in"`
	UpdatedFieldsContains      *string                       `json:"updatedFields_contains"`
	UpdatedFieldsContainsEvery []string                      `json:"updatedFields_contains_every"`
	UpdatedFieldsContainsSome  []string                      `json:"updatedFields_contains_some"`
	Node                       *UserWhereInput               `json:"node"`
	And                        []*UserSubscriptionWhereInput `json:"AND"`
	Or                         []*UserSubscriptionWhereInput `json:"OR"`
	Not                        []*UserSubscriptionWhereInput `json:"NOT"`
}

type UserUpdateDataInput struct {
	Name                   *string `json:"name"`
	Email                  *string `json:"email"`
	PasswordHash           *string `json:"passwordHash"`
	GithubUsername         *string `json:"githubUsername"`
	GithubAccountAuthToken *string `json:"githubAccountAuthToken"`
	GoogleAccountAuthToken *string `json:"googleAccountAuthToken"`
}

type UserUpdateInput struct {
	Name                   *string `json:"name"`
	Email                  *string `json:"email"`
	PasswordHash           *string `json:"passwordHash"`
	GithubUsername         *string `json:"githubUsername"`
	GithubAccountAuthToken *string `json:"githubAccountAuthToken"`
	GoogleAccountAuthToken *string `json:"googleAccountAuthToken"`
}

type UserUpdateManyMutationInput struct {
	Name                   *string `json:"name"`
	Email                  *string `json:"email"`
	PasswordHash           *string `json:"passwordHash"`
	GithubUsername         *string `json:"githubUsername"`
	GithubAccountAuthToken *string `json:"githubAccountAuthToken"`
	GoogleAccountAuthToken *string `json:"googleAccountAuthToken"`
}

type UserUpdateOneRequiredInput struct {
	Create  *UserCreateInput       `json:"create"`
	Update  *UserUpdateDataInput   `json:"update"`
	Upsert  *UserUpsertNestedInput `json:"upsert"`
	Connect *UserWhereUniqueInput  `json:"connect"`
}

type UserUpsertNestedInput struct {
	Update *UserUpdateDataInput `json:"update"`
	Create *UserCreateInput     `json:"create"`
}

type UserWhereInput struct {
	ID                                  *string           `json:"id"`
	IDNot                               *string           `json:"id_not"`
	IDIn                                []string          `json:"id_in"`
	IDNotIn                             []string          `json:"id_not_in"`
	IDLt                                *string           `json:"id_lt"`
	IDLte                               *string           `json:"id_lte"`
	IDGt                                *string           `json:"id_gt"`
	IDGte                               *string           `json:"id_gte"`
	IDContains                          *string           `json:"id_contains"`
	IDNotContains                       *string           `json:"id_not_contains"`
	IDStartsWith                        *string           `json:"id_starts_with"`
	IDNotStartsWith                     *string           `json:"id_not_starts_with"`
	IDEndsWith                          *string           `json:"id_ends_with"`
	IDNotEndsWith                       *string           `json:"id_not_ends_with"`
	CreatedAt                           *string           `json:"createdAt"`
	CreatedAtNot                        *string           `json:"createdAt_not"`
	CreatedAtIn                         []string          `json:"createdAt_in"`
	CreatedAtNotIn                      []string          `json:"createdAt_not_in"`
	CreatedAtLt                         *string           `json:"createdAt_lt"`
	CreatedAtLte                        *string           `json:"createdAt_lte"`
	CreatedAtGt                         *string           `json:"createdAt_gt"`
	CreatedAtGte                        *string           `json:"createdAt_gte"`
	UpdatedAt                           *string           `json:"updatedAt"`
	UpdatedAtNot                        *string           `json:"updatedAt_not"`
	UpdatedAtIn                         []string          `json:"updatedAt_in"`
	UpdatedAtNotIn                      []string          `json:"updatedAt_not_in"`
	UpdatedAtLt                         *string           `json:"updatedAt_lt"`
	UpdatedAtLte                        *string           `json:"updatedAt_lte"`
	UpdatedAtGt                         *string           `json:"updatedAt_gt"`
	UpdatedAtGte                        *string           `json:"updatedAt_gte"`
	Name                                *string           `json:"name"`
	NameNot                             *string           `json:"name_not"`
	NameIn                              []string          `json:"name_in"`
	NameNotIn                           []string          `json:"name_not_in"`
	NameLt                              *string           `json:"name_lt"`
	NameLte                             *string           `json:"name_lte"`
	NameGt                              *string           `json:"name_gt"`
	NameGte                             *string           `json:"name_gte"`
	NameContains                        *string           `json:"name_contains"`
	NameNotContains                     *string           `json:"name_not_contains"`
	NameStartsWith                      *string           `json:"name_starts_with"`
	NameNotStartsWith                   *string           `json:"name_not_starts_with"`
	NameEndsWith                        *string           `json:"name_ends_with"`
	NameNotEndsWith                     *string           `json:"name_not_ends_with"`
	Email                               *string           `json:"email"`
	EmailNot                            *string           `json:"email_not"`
	EmailIn                             []string          `json:"email_in"`
	EmailNotIn                          []string          `json:"email_not_in"`
	EmailLt                             *string           `json:"email_lt"`
	EmailLte                            *string           `json:"email_lte"`
	EmailGt                             *string           `json:"email_gt"`
	EmailGte                            *string           `json:"email_gte"`
	EmailContains                       *string           `json:"email_contains"`
	EmailNotContains                    *string           `json:"email_not_contains"`
	EmailStartsWith                     *string           `json:"email_starts_with"`
	EmailNotStartsWith                  *string           `json:"email_not_starts_with"`
	EmailEndsWith                       *string           `json:"email_ends_with"`
	EmailNotEndsWith                    *string           `json:"email_not_ends_with"`
	PasswordHash                        *string           `json:"passwordHash"`
	PasswordHashNot                     *string           `json:"passwordHash_not"`
	PasswordHashIn                      []string          `json:"passwordHash_in"`
	PasswordHashNotIn                   []string          `json:"passwordHash_not_in"`
	PasswordHashLt                      *string           `json:"passwordHash_lt"`
	PasswordHashLte                     *string           `json:"passwordHash_lte"`
	PasswordHashGt                      *string           `json:"passwordHash_gt"`
	PasswordHashGte                     *string           `json:"passwordHash_gte"`
	PasswordHashContains                *string           `json:"passwordHash_contains"`
	PasswordHashNotContains             *string           `json:"passwordHash_not_contains"`
	PasswordHashStartsWith              *string           `json:"passwordHash_starts_with"`
	PasswordHashNotStartsWith           *string           `json:"passwordHash_not_starts_with"`
	PasswordHashEndsWith                *string           `json:"passwordHash_ends_with"`
	PasswordHashNotEndsWith             *string           `json:"passwordHash_not_ends_with"`
	GithubUsername                      *string           `json:"githubUsername"`
	GithubUsernameNot                   *string           `json:"githubUsername_not"`
	GithubUsernameIn                    []string          `json:"githubUsername_in"`
	GithubUsernameNotIn                 []string          `json:"githubUsername_not_in"`
	GithubUsernameLt                    *string           `json:"githubUsername_lt"`
	GithubUsernameLte                   *string           `json:"githubUsername_lte"`
	GithubUsernameGt                    *string           `json:"githubUsername_gt"`
	GithubUsernameGte                   *string           `json:"githubUsername_gte"`
	GithubUsernameContains              *string           `json:"githubUsername_contains"`
	GithubUsernameNotContains           *string           `json:"githubUsername_not_contains"`
	GithubUsernameStartsWith            *string           `json:"githubUsername_starts_with"`
	GithubUsernameNotStartsWith         *string           `json:"githubUsername_not_starts_with"`
	GithubUsernameEndsWith              *string           `json:"githubUsername_ends_with"`
	GithubUsernameNotEndsWith           *string           `json:"githubUsername_not_ends_with"`
	GithubAccountAuthToken              *string           `json:"githubAccountAuthToken"`
	GithubAccountAuthTokenNot           *string           `json:"githubAccountAuthToken_not"`
	GithubAccountAuthTokenIn            []string          `json:"githubAccountAuthToken_in"`
	GithubAccountAuthTokenNotIn         []string          `json:"githubAccountAuthToken_not_in"`
	GithubAccountAuthTokenLt            *string           `json:"githubAccountAuthToken_lt"`
	GithubAccountAuthTokenLte           *string           `json:"githubAccountAuthToken_lte"`
	GithubAccountAuthTokenGt            *string           `json:"githubAccountAuthToken_gt"`
	GithubAccountAuthTokenGte           *string           `json:"githubAccountAuthToken_gte"`
	GithubAccountAuthTokenContains      *string           `json:"githubAccountAuthToken_contains"`
	GithubAccountAuthTokenNotContains   *string           `json:"githubAccountAuthToken_not_contains"`
	GithubAccountAuthTokenStartsWith    *string           `json:"githubAccountAuthToken_starts_with"`
	GithubAccountAuthTokenNotStartsWith *string           `json:"githubAccountAuthToken_not_starts_with"`
	GithubAccountAuthTokenEndsWith      *string           `json:"githubAccountAuthToken_ends_with"`
	GithubAccountAuthTokenNotEndsWith   *string           `json:"githubAccountAuthToken_not_ends_with"`
	GoogleAccountAuthToken              *string           `json:"googleAccountAuthToken"`
	GoogleAccountAuthTokenNot           *string           `json:"googleAccountAuthToken_not"`
	GoogleAccountAuthTokenIn            []string          `json:"googleAccountAuthToken_in"`
	GoogleAccountAuthTokenNotIn         []string          `json:"googleAccountAuthToken_not_in"`
	GoogleAccountAuthTokenLt            *string           `json:"googleAccountAuthToken_lt"`
	GoogleAccountAuthTokenLte           *string           `json:"googleAccountAuthToken_lte"`
	GoogleAccountAuthTokenGt            *string           `json:"googleAccountAuthToken_gt"`
	GoogleAccountAuthTokenGte           *string           `json:"googleAccountAuthToken_gte"`
	GoogleAccountAuthTokenContains      *string           `json:"googleAccountAuthToken_contains"`
	GoogleAccountAuthTokenNotContains   *string           `json:"googleAccountAuthToken_not_contains"`
	GoogleAccountAuthTokenStartsWith    *string           `json:"googleAccountAuthToken_starts_with"`
	GoogleAccountAuthTokenNotStartsWith *string           `json:"googleAccountAuthToken_not_starts_with"`
	GoogleAccountAuthTokenEndsWith      *string           `json:"googleAccountAuthToken_ends_with"`
	GoogleAccountAuthTokenNotEndsWith   *string           `json:"googleAccountAuthToken_not_ends_with"`
	And                                 []*UserWhereInput `json:"AND"`
	Or                                  []*UserWhereInput `json:"OR"`
	Not                                 []*UserWhereInput `json:"NOT"`
}

type UserWhereUniqueInput struct {
	ID    *string `json:"id"`
	Email *string `json:"email"`
}

type BuildHost string

const (
	BuildHostLinuxAmd64   BuildHost = "LINUX_AMD64"
	BuildHostLinuxAarch64 BuildHost = "LINUX_AARCH64"
	BuildHostWindowsAmd64 BuildHost = "WINDOWS_AMD64"
)

var AllBuildHost = []BuildHost{
	BuildHostLinuxAmd64,
	BuildHostLinuxAarch64,
	BuildHostWindowsAmd64,
}

func (e BuildHost) IsValid() bool {
	switch e {
	case BuildHostLinuxAmd64, BuildHostLinuxAarch64, BuildHostWindowsAmd64:
		return true
	}
	return false
}

func (e BuildHost) String() string {
	return string(e)
}

func (e *BuildHost) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = BuildHost(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid BuildHost", str)
	}
	return nil
}

func (e BuildHost) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type BuildJobOrderByInput string

const (
	BuildJobOrderByInputIDAsc                   BuildJobOrderByInput = "id_ASC"
	BuildJobOrderByInputIDDesc                  BuildJobOrderByInput = "id_DESC"
	BuildJobOrderByInputCreatedAtAsc            BuildJobOrderByInput = "createdAt_ASC"
	BuildJobOrderByInputCreatedAtDesc           BuildJobOrderByInput = "createdAt_DESC"
	BuildJobOrderByInputUpdatedAtAsc            BuildJobOrderByInput = "updatedAt_ASC"
	BuildJobOrderByInputUpdatedAtDesc           BuildJobOrderByInput = "updatedAt_DESC"
	BuildJobOrderByInputCompletedAtAsc          BuildJobOrderByInput = "completedAt_ASC"
	BuildJobOrderByInputCompletedAtDesc         BuildJobOrderByInput = "completedAt_DESC"
	BuildJobOrderByInputBuildHostKindAsc        BuildJobOrderByInput = "buildHostKind_ASC"
	BuildJobOrderByInputBuildHostKindDesc       BuildJobOrderByInput = "buildHostKind_DESC"
	BuildJobOrderByInputBuildHostIdentifierAsc  BuildJobOrderByInput = "buildHostIdentifier_ASC"
	BuildJobOrderByInputBuildHostIdentifierDesc BuildJobOrderByInput = "buildHostIdentifier_DESC"
	BuildJobOrderByInputStatusAsc               BuildJobOrderByInput = "status_ASC"
	BuildJobOrderByInputStatusDesc              BuildJobOrderByInput = "status_DESC"
	BuildJobOrderByInputBuildIdentifierAsc      BuildJobOrderByInput = "buildIdentifier_ASC"
	BuildJobOrderByInputBuildIdentifierDesc     BuildJobOrderByInput = "buildIdentifier_DESC"
	BuildJobOrderByInputSourceRevisionAsc       BuildJobOrderByInput = "sourceRevision_ASC"
	BuildJobOrderByInputSourceRevisionDesc      BuildJobOrderByInput = "sourceRevision_DESC"
	BuildJobOrderByInputArtifactURIAsc          BuildJobOrderByInput = "artifactUri_ASC"
	BuildJobOrderByInputArtifactURIDesc         BuildJobOrderByInput = "artifactUri_DESC"
	BuildJobOrderByInputSetupLogsAsc            BuildJobOrderByInput = "setupLogs_ASC"
	BuildJobOrderByInputSetupLogsDesc           BuildJobOrderByInput = "setupLogs_DESC"
	BuildJobOrderByInputBuildLogsAsc            BuildJobOrderByInput = "buildLogs_ASC"
	BuildJobOrderByInputBuildLogsDesc           BuildJobOrderByInput = "buildLogs_DESC"
	BuildJobOrderByInputPushLogsAsc             BuildJobOrderByInput = "pushLogs_ASC"
	BuildJobOrderByInputPushLogsDesc            BuildJobOrderByInput = "pushLogs_DESC"
)

var AllBuildJobOrderByInput = []BuildJobOrderByInput{
	BuildJobOrderByInputIDAsc,
	BuildJobOrderByInputIDDesc,
	BuildJobOrderByInputCreatedAtAsc,
	BuildJobOrderByInputCreatedAtDesc,
	BuildJobOrderByInputUpdatedAtAsc,
	BuildJobOrderByInputUpdatedAtDesc,
	BuildJobOrderByInputCompletedAtAsc,
	BuildJobOrderByInputCompletedAtDesc,
	BuildJobOrderByInputBuildHostKindAsc,
	BuildJobOrderByInputBuildHostKindDesc,
	BuildJobOrderByInputBuildHostIdentifierAsc,
	BuildJobOrderByInputBuildHostIdentifierDesc,
	BuildJobOrderByInputStatusAsc,
	BuildJobOrderByInputStatusDesc,
	BuildJobOrderByInputBuildIdentifierAsc,
	BuildJobOrderByInputBuildIdentifierDesc,
	BuildJobOrderByInputSourceRevisionAsc,
	BuildJobOrderByInputSourceRevisionDesc,
	BuildJobOrderByInputArtifactURIAsc,
	BuildJobOrderByInputArtifactURIDesc,
	BuildJobOrderByInputSetupLogsAsc,
	BuildJobOrderByInputSetupLogsDesc,
	BuildJobOrderByInputBuildLogsAsc,
	BuildJobOrderByInputBuildLogsDesc,
	BuildJobOrderByInputPushLogsAsc,
	BuildJobOrderByInputPushLogsDesc,
}

func (e BuildJobOrderByInput) IsValid() bool {
	switch e {
	case BuildJobOrderByInputIDAsc, BuildJobOrderByInputIDDesc, BuildJobOrderByInputCreatedAtAsc, BuildJobOrderByInputCreatedAtDesc, BuildJobOrderByInputUpdatedAtAsc, BuildJobOrderByInputUpdatedAtDesc, BuildJobOrderByInputCompletedAtAsc, BuildJobOrderByInputCompletedAtDesc, BuildJobOrderByInputBuildHostKindAsc, BuildJobOrderByInputBuildHostKindDesc, BuildJobOrderByInputBuildHostIdentifierAsc, BuildJobOrderByInputBuildHostIdentifierDesc, BuildJobOrderByInputStatusAsc, BuildJobOrderByInputStatusDesc, BuildJobOrderByInputBuildIdentifierAsc, BuildJobOrderByInputBuildIdentifierDesc, BuildJobOrderByInputSourceRevisionAsc, BuildJobOrderByInputSourceRevisionDesc, BuildJobOrderByInputArtifactURIAsc, BuildJobOrderByInputArtifactURIDesc, BuildJobOrderByInputSetupLogsAsc, BuildJobOrderByInputSetupLogsDesc, BuildJobOrderByInputBuildLogsAsc, BuildJobOrderByInputBuildLogsDesc, BuildJobOrderByInputPushLogsAsc, BuildJobOrderByInputPushLogsDesc:
		return true
	}
	return false
}

func (e BuildJobOrderByInput) String() string {
	return string(e)
}

func (e *BuildJobOrderByInput) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = BuildJobOrderByInput(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid BuildJobOrderByInput", str)
	}
	return nil
}

func (e BuildJobOrderByInput) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type BuildJobStatus string

const (
	BuildJobStatusUnknown        BuildJobStatus = "Unknown"
	BuildJobStatusCreated        BuildJobStatus = "Created"
	BuildJobStatusPending        BuildJobStatus = "Pending"
	BuildJobStatusCloning        BuildJobStatus = "Cloning"
	BuildJobStatusPreparingBuild BuildJobStatus = "PreparingBuild"
	BuildJobStatusBuilding       BuildJobStatus = "Building"
	BuildJobStatusPushing        BuildJobStatus = "Pushing"
	BuildJobStatusComplete       BuildJobStatus = "Complete"
)

var AllBuildJobStatus = []BuildJobStatus{
	BuildJobStatusUnknown,
	BuildJobStatusCreated,
	BuildJobStatusPending,
	BuildJobStatusCloning,
	BuildJobStatusPreparingBuild,
	BuildJobStatusBuilding,
	BuildJobStatusPushing,
	BuildJobStatusComplete,
}

func (e BuildJobStatus) IsValid() bool {
	switch e {
	case BuildJobStatusUnknown, BuildJobStatusCreated, BuildJobStatusPending, BuildJobStatusCloning, BuildJobStatusPreparingBuild, BuildJobStatusBuilding, BuildJobStatusPushing, BuildJobStatusComplete:
		return true
	}
	return false
}

func (e BuildJobStatus) String() string {
	return string(e)
}

func (e *BuildJobStatus) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = BuildJobStatus(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid BuildJobStatus", str)
	}
	return nil
}

func (e BuildJobStatus) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type CloneStrategy string

const (
	CloneStrategyGitSSH   CloneStrategy = "GIT_SSH"
	CloneStrategyGitHTTPS CloneStrategy = "GIT_HTTPS"
)

var AllCloneStrategy = []CloneStrategy{
	CloneStrategyGitSSH,
	CloneStrategyGitHTTPS,
}

func (e CloneStrategy) IsValid() bool {
	switch e {
	case CloneStrategyGitSSH, CloneStrategyGitHTTPS:
		return true
	}
	return false
}

func (e CloneStrategy) String() string {
	return string(e)
}

func (e *CloneStrategy) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = CloneStrategy(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid CloneStrategy", str)
	}
	return nil
}

func (e CloneStrategy) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type DockerRegistryOrderByInput string

const (
	DockerRegistryOrderByInputIDAsc            DockerRegistryOrderByInput = "id_ASC"
	DockerRegistryOrderByInputIDDesc           DockerRegistryOrderByInput = "id_DESC"
	DockerRegistryOrderByInputCreatedAtAsc     DockerRegistryOrderByInput = "createdAt_ASC"
	DockerRegistryOrderByInputCreatedAtDesc    DockerRegistryOrderByInput = "createdAt_DESC"
	DockerRegistryOrderByInputUpdatedAtAsc     DockerRegistryOrderByInput = "updatedAt_ASC"
	DockerRegistryOrderByInputUpdatedAtDesc    DockerRegistryOrderByInput = "updatedAt_DESC"
	DockerRegistryOrderByInputHostnameAsc      DockerRegistryOrderByInput = "Hostname_ASC"
	DockerRegistryOrderByInputHostnameDesc     DockerRegistryOrderByInput = "Hostname_DESC"
	DockerRegistryOrderByInputAuthUsernameAsc  DockerRegistryOrderByInput = "AuthUsername_ASC"
	DockerRegistryOrderByInputAuthUsernameDesc DockerRegistryOrderByInput = "AuthUsername_DESC"
	DockerRegistryOrderByInputAuthPasswordAsc  DockerRegistryOrderByInput = "AuthPassword_ASC"
	DockerRegistryOrderByInputAuthPasswordDesc DockerRegistryOrderByInput = "AuthPassword_DESC"
)

var AllDockerRegistryOrderByInput = []DockerRegistryOrderByInput{
	DockerRegistryOrderByInputIDAsc,
	DockerRegistryOrderByInputIDDesc,
	DockerRegistryOrderByInputCreatedAtAsc,
	DockerRegistryOrderByInputCreatedAtDesc,
	DockerRegistryOrderByInputUpdatedAtAsc,
	DockerRegistryOrderByInputUpdatedAtDesc,
	DockerRegistryOrderByInputHostnameAsc,
	DockerRegistryOrderByInputHostnameDesc,
	DockerRegistryOrderByInputAuthUsernameAsc,
	DockerRegistryOrderByInputAuthUsernameDesc,
	DockerRegistryOrderByInputAuthPasswordAsc,
	DockerRegistryOrderByInputAuthPasswordDesc,
}

func (e DockerRegistryOrderByInput) IsValid() bool {
	switch e {
	case DockerRegistryOrderByInputIDAsc, DockerRegistryOrderByInputIDDesc, DockerRegistryOrderByInputCreatedAtAsc, DockerRegistryOrderByInputCreatedAtDesc, DockerRegistryOrderByInputUpdatedAtAsc, DockerRegistryOrderByInputUpdatedAtDesc, DockerRegistryOrderByInputHostnameAsc, DockerRegistryOrderByInputHostnameDesc, DockerRegistryOrderByInputAuthUsernameAsc, DockerRegistryOrderByInputAuthUsernameDesc, DockerRegistryOrderByInputAuthPasswordAsc, DockerRegistryOrderByInputAuthPasswordDesc:
		return true
	}
	return false
}

func (e DockerRegistryOrderByInput) String() string {
	return string(e)
}

func (e *DockerRegistryOrderByInput) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DockerRegistryOrderByInput(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid DockerRegistryOrderByInput", str)
	}
	return nil
}

func (e DockerRegistryOrderByInput) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type MutationType string

const (
	MutationTypeCreated MutationType = "CREATED"
	MutationTypeUpdated MutationType = "UPDATED"
	MutationTypeDeleted MutationType = "DELETED"
)

var AllMutationType = []MutationType{
	MutationTypeCreated,
	MutationTypeUpdated,
	MutationTypeDeleted,
}

func (e MutationType) IsValid() bool {
	switch e {
	case MutationTypeCreated, MutationTypeUpdated, MutationTypeDeleted:
		return true
	}
	return false
}

func (e MutationType) String() string {
	return string(e)
}

func (e *MutationType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = MutationType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid MutationType", str)
	}
	return nil
}

func (e MutationType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type SourceProvider string

const (
	SourceProviderGithub SourceProvider = "Github"
)

var AllSourceProvider = []SourceProvider{
	SourceProviderGithub,
}

func (e SourceProvider) IsValid() bool {
	switch e {
	case SourceProviderGithub:
		return true
	}
	return false
}

func (e SourceProvider) String() string {
	return string(e)
}

func (e *SourceProvider) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = SourceProvider(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid SourceProvider", str)
	}
	return nil
}

func (e SourceProvider) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type SourceRepositoryOrderByInput string

const (
	SourceRepositoryOrderByInputIDAsc                         SourceRepositoryOrderByInput = "id_ASC"
	SourceRepositoryOrderByInputIDDesc                        SourceRepositoryOrderByInput = "id_DESC"
	SourceRepositoryOrderByInputCreatedAtAsc                  SourceRepositoryOrderByInput = "createdAt_ASC"
	SourceRepositoryOrderByInputCreatedAtDesc                 SourceRepositoryOrderByInput = "createdAt_DESC"
	SourceRepositoryOrderByInputUpdatedAtAsc                  SourceRepositoryOrderByInput = "updatedAt_ASC"
	SourceRepositoryOrderByInputUpdatedAtDesc                 SourceRepositoryOrderByInput = "updatedAt_DESC"
	SourceRepositoryOrderByInputSourceProviderAsc             SourceRepositoryOrderByInput = "sourceProvider_ASC"
	SourceRepositoryOrderByInputSourceProviderDesc            SourceRepositoryOrderByInput = "sourceProvider_DESC"
	SourceRepositoryOrderByInputNameAsc                       SourceRepositoryOrderByInput = "name_ASC"
	SourceRepositoryOrderByInputNameDesc                      SourceRepositoryOrderByInput = "name_DESC"
	SourceRepositoryOrderByInputAuthClientIDAsc               SourceRepositoryOrderByInput = "authClientID_ASC"
	SourceRepositoryOrderByInputAuthClientIDDesc              SourceRepositoryOrderByInput = "authClientID_DESC"
	SourceRepositoryOrderByInputAuthSecretAsc                 SourceRepositoryOrderByInput = "authSecret_ASC"
	SourceRepositoryOrderByInputAuthSecretDesc                SourceRepositoryOrderByInput = "authSecret_DESC"
	SourceRepositoryOrderByInputCloneStrategyAsc              SourceRepositoryOrderByInput = "cloneStrategy_ASC"
	SourceRepositoryOrderByInputCloneStrategyDesc             SourceRepositoryOrderByInput = "cloneStrategy_DESC"
	SourceRepositoryOrderByInputBuildsEnabledAsc              SourceRepositoryOrderByInput = "buildsEnabled_ASC"
	SourceRepositoryOrderByInputBuildsEnabledDesc             SourceRepositoryOrderByInput = "buildsEnabled_DESC"
	SourceRepositoryOrderByInputBaseConfigurationFileNameAsc  SourceRepositoryOrderByInput = "baseConfigurationFileName_ASC"
	SourceRepositoryOrderByInputBaseConfigurationFileNameDesc SourceRepositoryOrderByInput = "baseConfigurationFileName_DESC"
)

var AllSourceRepositoryOrderByInput = []SourceRepositoryOrderByInput{
	SourceRepositoryOrderByInputIDAsc,
	SourceRepositoryOrderByInputIDDesc,
	SourceRepositoryOrderByInputCreatedAtAsc,
	SourceRepositoryOrderByInputCreatedAtDesc,
	SourceRepositoryOrderByInputUpdatedAtAsc,
	SourceRepositoryOrderByInputUpdatedAtDesc,
	SourceRepositoryOrderByInputSourceProviderAsc,
	SourceRepositoryOrderByInputSourceProviderDesc,
	SourceRepositoryOrderByInputNameAsc,
	SourceRepositoryOrderByInputNameDesc,
	SourceRepositoryOrderByInputAuthClientIDAsc,
	SourceRepositoryOrderByInputAuthClientIDDesc,
	SourceRepositoryOrderByInputAuthSecretAsc,
	SourceRepositoryOrderByInputAuthSecretDesc,
	SourceRepositoryOrderByInputCloneStrategyAsc,
	SourceRepositoryOrderByInputCloneStrategyDesc,
	SourceRepositoryOrderByInputBuildsEnabledAsc,
	SourceRepositoryOrderByInputBuildsEnabledDesc,
	SourceRepositoryOrderByInputBaseConfigurationFileNameAsc,
	SourceRepositoryOrderByInputBaseConfigurationFileNameDesc,
}

func (e SourceRepositoryOrderByInput) IsValid() bool {
	switch e {
	case SourceRepositoryOrderByInputIDAsc, SourceRepositoryOrderByInputIDDesc, SourceRepositoryOrderByInputCreatedAtAsc, SourceRepositoryOrderByInputCreatedAtDesc, SourceRepositoryOrderByInputUpdatedAtAsc, SourceRepositoryOrderByInputUpdatedAtDesc, SourceRepositoryOrderByInputSourceProviderAsc, SourceRepositoryOrderByInputSourceProviderDesc, SourceRepositoryOrderByInputNameAsc, SourceRepositoryOrderByInputNameDesc, SourceRepositoryOrderByInputAuthClientIDAsc, SourceRepositoryOrderByInputAuthClientIDDesc, SourceRepositoryOrderByInputAuthSecretAsc, SourceRepositoryOrderByInputAuthSecretDesc, SourceRepositoryOrderByInputCloneStrategyAsc, SourceRepositoryOrderByInputCloneStrategyDesc, SourceRepositoryOrderByInputBuildsEnabledAsc, SourceRepositoryOrderByInputBuildsEnabledDesc, SourceRepositoryOrderByInputBaseConfigurationFileNameAsc, SourceRepositoryOrderByInputBaseConfigurationFileNameDesc:
		return true
	}
	return false
}

func (e SourceRepositoryOrderByInput) String() string {
	return string(e)
}

func (e *SourceRepositoryOrderByInput) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = SourceRepositoryOrderByInput(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid SourceRepositoryOrderByInput", str)
	}
	return nil
}

func (e SourceRepositoryOrderByInput) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type UserOrderByInput string

const (
	UserOrderByInputIDAsc                      UserOrderByInput = "id_ASC"
	UserOrderByInputIDDesc                     UserOrderByInput = "id_DESC"
	UserOrderByInputCreatedAtAsc               UserOrderByInput = "createdAt_ASC"
	UserOrderByInputCreatedAtDesc              UserOrderByInput = "createdAt_DESC"
	UserOrderByInputUpdatedAtAsc               UserOrderByInput = "updatedAt_ASC"
	UserOrderByInputUpdatedAtDesc              UserOrderByInput = "updatedAt_DESC"
	UserOrderByInputNameAsc                    UserOrderByInput = "name_ASC"
	UserOrderByInputNameDesc                   UserOrderByInput = "name_DESC"
	UserOrderByInputEmailAsc                   UserOrderByInput = "email_ASC"
	UserOrderByInputEmailDesc                  UserOrderByInput = "email_DESC"
	UserOrderByInputPasswordHashAsc            UserOrderByInput = "passwordHash_ASC"
	UserOrderByInputPasswordHashDesc           UserOrderByInput = "passwordHash_DESC"
	UserOrderByInputGithubUsernameAsc          UserOrderByInput = "githubUsername_ASC"
	UserOrderByInputGithubUsernameDesc         UserOrderByInput = "githubUsername_DESC"
	UserOrderByInputGithubAccountAuthTokenAsc  UserOrderByInput = "githubAccountAuthToken_ASC"
	UserOrderByInputGithubAccountAuthTokenDesc UserOrderByInput = "githubAccountAuthToken_DESC"
	UserOrderByInputGoogleAccountAuthTokenAsc  UserOrderByInput = "googleAccountAuthToken_ASC"
	UserOrderByInputGoogleAccountAuthTokenDesc UserOrderByInput = "googleAccountAuthToken_DESC"
)

var AllUserOrderByInput = []UserOrderByInput{
	UserOrderByInputIDAsc,
	UserOrderByInputIDDesc,
	UserOrderByInputCreatedAtAsc,
	UserOrderByInputCreatedAtDesc,
	UserOrderByInputUpdatedAtAsc,
	UserOrderByInputUpdatedAtDesc,
	UserOrderByInputNameAsc,
	UserOrderByInputNameDesc,
	UserOrderByInputEmailAsc,
	UserOrderByInputEmailDesc,
	UserOrderByInputPasswordHashAsc,
	UserOrderByInputPasswordHashDesc,
	UserOrderByInputGithubUsernameAsc,
	UserOrderByInputGithubUsernameDesc,
	UserOrderByInputGithubAccountAuthTokenAsc,
	UserOrderByInputGithubAccountAuthTokenDesc,
	UserOrderByInputGoogleAccountAuthTokenAsc,
	UserOrderByInputGoogleAccountAuthTokenDesc,
}

func (e UserOrderByInput) IsValid() bool {
	switch e {
	case UserOrderByInputIDAsc, UserOrderByInputIDDesc, UserOrderByInputCreatedAtAsc, UserOrderByInputCreatedAtDesc, UserOrderByInputUpdatedAtAsc, UserOrderByInputUpdatedAtDesc, UserOrderByInputNameAsc, UserOrderByInputNameDesc, UserOrderByInputEmailAsc, UserOrderByInputEmailDesc, UserOrderByInputPasswordHashAsc, UserOrderByInputPasswordHashDesc, UserOrderByInputGithubUsernameAsc, UserOrderByInputGithubUsernameDesc, UserOrderByInputGithubAccountAuthTokenAsc, UserOrderByInputGithubAccountAuthTokenDesc, UserOrderByInputGoogleAccountAuthTokenAsc, UserOrderByInputGoogleAccountAuthTokenDesc:
		return true
	}
	return false
}

func (e UserOrderByInput) String() string {
	return string(e)
}

func (e *UserOrderByInput) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = UserOrderByInput(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid UserOrderByInput", str)
	}
	return nil
}

func (e UserOrderByInput) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
